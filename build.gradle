plugins {
    id 'java'
    id 'com.google.protobuf' version '0.8.17'
    id 'idea'
}

group 'sandbox'
version '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = '1.11'
final def grpcVersion = '1.48.0'
final def protobufVersion = '3.18.1'
final def junit4version = '4.13.2'
final def junit5version = '5.8.1'

repositories {
    mavenLocal()
    mavenCentral()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

dependencies {
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: protobufVersion
    compile group: 'io.grpc', name: 'grpc-netty-shaded', version: grpcVersion
    compile group: 'io.grpc', name: 'grpc-protobuf', version: grpcVersion
    compile group: 'io.grpc', name: 'grpc-stub', version: grpcVersion
    compile group: 'io.grpc', name: 'grpc-testing', version: grpcVersion

    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.11'

//    compile group: 'me.dinowernli', name: 'java-grpc-prometheus', version: '0.3.0'

    testImplementation group: 'junit', name: 'junit', version: junit4version
    testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.4.2'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5version
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-migrationsupport', version: junit5version
    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: junit5version
}

test {
    useJUnitPlatform{
         includeEngines 'junit-jupiter', 'junit-vintage'
    }

    maxHeapSize = '1G'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'sandbox.colors.Main'
        )
    }
    from {  // bundle all dependencies inside the .jar
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
